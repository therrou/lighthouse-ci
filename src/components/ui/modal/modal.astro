---
// Destructure the properties from Astro.props
const { url, name } = Astro.props;
---

<!--
Re-usable link component for navigation bar. Highlights the active link
by comparing the current URL with the href of each link.
We assign an ID matching the URL for easy reference in our script.
If URL is '/' (home page), assign ID as 'home' 
-->
<div class='mx-16 my-16 flex-1'>
  <button
    data-astro-prefetch
    id='open-modal'
    class='rounded-lg text-base font-medium text-neutral-600 outline-none ring-zinc-500 hover:text-neutral-500 focus-visible:ring dark:text-neutral-400 dark:ring-zinc-200 dark:hover:text-neutral-500 dark:focus:outline-none md:py-3 md:text-sm 2xl:text-base'
  >
    Open the modal
  </button>
</div>
<div
  class='relative z-10 hidden'
  aria-labelledby='modal-title'
  role='dialog'
  id='modal'
  aria-modal='true'
>
  <!--
      Background backdrop, show/hide based on modal state.
  
      Entering: "ease-out duration-300"
        From: "opacity-0"
        To: "opacity-100"
      Leaving: "ease-in duration-200"
        From: "opacity-100"
        To: "opacity-0"
    -->
  <div
    class='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity'
    aria-hidden='true'
    id='backdrop'
  >
  </div>

  <div class='fixed inset-0 z-10 w-screen overflow-y-auto' id='modal-container'>
    <div
      class='flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0'
    >
      <div
        id='modal-wrapper'
        class='relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg'
      >
        <div class='bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4'>
          <div class='sm:flex sm:items-start'>
            <div
              class='mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10'
            >
              <svg
                class='h-6 w-6 text-red-600'
                fill='none'
                viewBox='0 0 24 24'
                stroke-width='1.5'
                stroke='currentColor'
                aria-hidden='true'
                data-slot='icon'
              >
                <path
                  stroke-linecap='round'
                  stroke-linejoin='round'
                  d='M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z'
                ></path>
              </svg>
            </div>
            <div class='mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left'>
              <h3
                class='text-base font-semibold leading-6 text-gray-900'
                id='modal-title'
              >
                Accessibility Modal
              </h3>
              <div class='mt-2'>
                <p class='text-sm text-gray-500'>
                  Are you sure you want to deactivate your account? All of your
                  data will be permanently removed. This action cannot be
                  undone.
                </p>
              </div>
            </div>
          </div>
        </div>
        <div class='bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6'>
          <button
            type='button'
            id='close-modal'
            class='inline-flex w-full justify-center rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 sm:ml-3 sm:w-auto'
            >Close Modal in red</button
          >
          <button
            type='button'
            id='close-modal-1'
            class='mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto'
            >Close modal
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const modal = document.getElementById('modal');
  const backdrop = modal?.querySelector('#backdrop');
  const modalPanel = modal?.querySelector('.relative.transform');
  const cancelButton = modal?.querySelector('button:last-child');
  const openModalBtn = document.getElementById('open-modal');

  function openModal() {
    modal?.classList.remove('hidden');
    backdrop?.classList.add('ease-out', 'duration-300', 'opacity-100');
    backdrop?.classList.remove('opacity-0');
    modalPanel?.classList.add(
      'ease-out',
      'duration-300',
      'opacity-100',
      'translate-y-0',
      'sm:scale-100'
    );
    modalPanel?.classList.remove(
      'opacity-0',
      'translate-y-4',
      'sm:translate-y-0',
      'sm:scale-95'
    );
  }

  function closeModal() {
    backdrop?.classList.add('ease-in', 'duration-200', 'opacity-0');
    backdrop?.classList.remove('opacity-100');
    modalPanel?.classList.add(
      'ease-in',
      'duration-200',
      'opacity-0',
      'translate-y-4',
      'sm:translate-y-0',
      'sm:scale-95'
    );
    modalPanel?.classList.remove(
      'opacity-100',
      'translate-y-0',
      'sm:scale-100'
    );

    setTimeout(() => {
      modal?.classList.add('hidden');
    }, 200);
  }

  const closeModalBtn = document.getElementById('close-modal');

  openModalBtn?.addEventListener('click', openModal);
  closeModalBtn?.addEventListener('click', closeModal);

  // Close modal when clicking outside
  modal?.addEventListener('click', (event) => {
    if (event.target === modal) {
      closeModal();
    }
  });

  // Close modal when clicking the cancel button
  cancelButton?.addEventListener('click', closeModal);
</script>
