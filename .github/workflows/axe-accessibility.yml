name: Accessibility Analysis
on: [ pull_request]

jobs:
  axe-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build Astro site
        run: npm run build

      - name: Start Astro preview server
        run: npm run preview -- --port 4321 &

      - name: Wait for server
        run: |
          while ! nc -z localhost 4321; do
            sleep 3
          done
 
      - name: Install jq
        run: sudo apt-get install jq

      - name: Run Axe CI
        run: |
          URLS="http://localhost:4321"
          npm run axe
        env:
          URLS: "http://localhost:4321"

      - name: Check Axe results
        run: |
          if [ -f axe-results.json ]; then
            if jq -e '. | length > 0' axe-results.json > /dev/null; then
              echo "Accessibility issues found. Check axe-results.json for details."
            else
              echo "No accessibility issues found."
            fi
          else
            echo "axe-results.json not found. Axe may have failed to run."
            exit 1
          fi

      - name: Generate report
        run: |
          echo "## Accessibility Analysis Results" > report.md
          echo "Total severe issues: ${{ steps.analyze.outputs.severe_issues }}" >> report.md
          echo "\`\`\`json" >> report.md
          jq '.violations[] | {impact, description, nodes: [.nodes[].html]}' axe-results.json >> report.md
          echo "\`\`\`" >> report.md

      - name: Comment PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs')
            const report = fs.readFileSync('report.md', 'utf8')
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: report
            })